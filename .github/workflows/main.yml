name: iOS Release

on:
  push:
    branches: ["main"]
  workflow_dispatch:

jobs:
  build:
    name: Build and Release iOS App
    runs-on: macos-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install pnpm
        run: npm install -g pnpm

      - name: Install dependencies
        run: pnpm install --no-frozen-lockfile

      - name: Build Next.js App
        run: pnpm build

      - name: Set Capacitor config for job4students.ro
        run: |
          echo '{
            "appId": "com.jobstudents.app",
            "appName": "Job4Students",
            "webDir": "www",
            "server": {
              "url": "https://job4students.vercel.app",
              "cleartext": true
            }
          }' > capacitor.config.json

      - name: Install Capacitor CLI and iOS platform
        run: |
          pnpm add @capacitor/cli
          pnpm add @capacitor/ios

      - name: Add iOS platform
        run: npx cap add ios || echo "iOS platform already added"

      - name: Sync Capacitor project
        run: npx cap sync ios

      - name: Install CocoaPods dependencies
        run: |
          cd ios/App
          pod install --repo-update
          cd ../../

      - name: Create exportOptions.plist
        run: |
          mkdir -p ios/App
          cat <<EOF > ios/App/exportOptions.plist
          <?xml version="1.0" encoding="UTF-8"?>
          <!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
          <plist version="1.0">
          <dict>
            <key>method</key>
            <string>development</string>
            <key>signingStyle</key>
            <string>manual</string>
            <key>compileBitcode</key>
            <false/>
            <key>teamID</key>
            <string>${{ secrets.TEAM_ID }}</string>
          </dict>
          </plist>
          EOF

      - name: Build iOS Archive
        env:
          SCHEME: "App"    # Update if your scheme is different
          ARCHIVE_PATH: ${{ github.workspace }}/ios/build/MyApp.xcarchive
          CODE_SIGNING_ALLOWED: "NO"
        run: |
          cd ios/App
          xcodebuild clean archive \
            -workspace "App.xcworkspace" \
            -scheme "$SCHEME" \
            -sdk iphoneos \
            -archivePath "$ARCHIVE_PATH" \
            DEVELOPMENT_TEAM="${{ secrets.TEAM_ID }}" \
            CODE_SIGNING_ALLOWED=NO

      - name: Export IPA
        env:
          ARCHIVE_PATH: ${{ github.workspace }}/ios/build/MyApp.xcarchive
          EXPORT_PATH: ${{ github.workspace }}/ios/build/MyApp.ipa
          CODE_SIGNING_ALLOWED: "NO"
        run: |
          cd ios/App
          xcodebuild -exportArchive \
            -archivePath "$ARCHIVE_PATH" \
            -exportOptionsPlist exportOptions.plist \
            -exportPath "$EXPORT_PATH" \
            CODE_SIGNING_ALLOWED=NO

      - name: Create GitHub Release
        id: create_release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: v1.0.${{ github.run_number }}
          name: iOS Release v1.0.${{ github.run_number }}
          body: "Automated iOS release build for version 1.0.${{ github.run_number }}."
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload IPA to Release
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ${{ env.EXPORT_PATH }}/MyApp.ipa
          asset_name: MyApp.ipa
          asset_content_type: application/octet-stream

      - name: Upload to TestFlight
        run: |
          fastlane deliver --ipa "${{ env.EXPORT_PATH }}/MyApp.ipa" --app_identifier "com.example.myapp"
        env:
          FASTLANE_APPLE_ID: ${{ secrets.APPLE_ID }}
          FASTLANE_PASSWORD: ${{ secrets.APPLE_PASSWORD }}
